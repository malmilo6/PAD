version: '3.8'

services:
  db_uas:
    container_name: mysql-container-uas
    image: mysql:8.0
    restart: always
    command: mysqld --default-authentication-plugin=mysql_native_password
    volumes:
      - ./mysql_data_uas:/var/lib/mysql
    env_file:
      - .env
    environment:
      - MYSQL_ROOT_PASSWORD=${SQL_ROOT_PASSWORD}
      - MYSQL_USER=${SQL_USER_UAS}
      - MYSQL_PASSWORD=${SQL_PASSWORD_UAS}
      - MYSQL_DATABASE=${SQL_DATABASE_UAS}
    ports:
      - 3306:3306

  db_wds:
    container_name: mysql-container-wds
    image: mysql:8.0
    restart: always
    command: mysqld --default-authentication-plugin=mysql_native_password
    volumes:
      - ./mysql_data_wds:/var/lib/mysql
    env_file:
      - .env
    environment:
      - MYSQL_ROOT_PASSWORD=${SQL_ROOT_PASSWORD}
      - MYSQL_USER=${SQL_USER_WDS}
      - MYSQL_PASSWORD=${SQL_PASSWORD_WDS}
      - MYSQL_DATABASE=${SQL_DATABASE_WDS}
    ports:
      - 3307:3306

  user_alert_service:
    container_name: django-user-alert-service
    build:
      context: ./user_alert_service
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8001
    volumes:
      - ./user_alert_service/:/usr/src/user_alert_service/
    env_file:
      - .env
    ports:
      - 8001:8001
    depends_on:
      - db_uas

  weather_data_service:
    container_name: django-weather-data-service
    build:
      context: ./weather_data_service
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./weather_data_service/:/usr/src/weather_data_service/
    env_file:
      - .env
    ports:
      - 8000:8000
    depends_on:
      - db_wds

volumes:
  mysql_data_uas:
  mysql_data_wds: