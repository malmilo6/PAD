version: '3.8'

services:
  mongodb:
    image: mongo
    restart: always
    volumes:
      - ./init-db:/docker-entrypoint-initdb.d
      - ./data-db:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: mongoadmin
      MONGO_INITDB_DATABASE: db_uas
    ports:
      - 27017:27017

  db_wds:
    container_name: mysql-container-wds
    image: mysql:8.0
    restart: always
    command: mysqld --default-authentication-plugin=mysql_native_password
    volumes:
      - ./mysql:/var/lib/mysql
    env_file:
      - .env
    environment:
      - MYSQL_ROOT_PASSWORD=${SQL_ROOT_PASSWORD}
      - MYSQL_USER=${SQL_USER}
      - MYSQL_PASSWORD=${SQL_PASSWORD}
      - MYSQL_DATABASE=${SQL_DATABASE}
    ports:
      - 3306:3306

  user_alert_service:
    container_name: django-user-alert-service
    build:
      context: ./user_alert_service
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8001
    volumes:
      - ./user_alert_service/:/usr/src/app
    env_file:
      - .env
    ports:
      - 8001:8001
      - 50051:50051 # gRPC port
    depends_on:
      - mongodb
    links:
      - mongodb

  weather_data_service:
    container_name: django-weather-data-service
    build:
      context: ./weather_data_service
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./weather_data_service/:/usr/src/app
    env_file:
      - .env
    ports:
      - 8000:8000
      - 50052:50051 # gRPC port
    depends_on:
      - db_wds
    links:
      - db_wds

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"

  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - user_alert_service
      - weather_data_service
      - redis

  service_discovery:
    build:
      context: ./service_discovery
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    depends_on:
      - user_alert_service
      - weather_data_service
